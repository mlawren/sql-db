
=head1 NAME

SQL::DBx::Sequence - SQL::DB Role for sequence support

=head1 VERSION

0.19_11. Development release.

=head1 SYNOPSIS

  use SQL::DB;
  use SQL::DBx::Sequence;

  my $db = SQL::DB->connect($dsn);

  $db->create_sequence('myseq');
  my $id = $db->nextval('myseq');

=head1 DESCRIPTION

B<SQL::DBx::Sequence> is a role adding I<simple> SQL sequence support
to L<SQL::DB>.  Sequences are emulated on SQLite, used directly for
PostgreSQL, and are unsupported for everything else.

This module may be beneficial for two reasons:

=over

=item SQLite user-defined functions

As well as the extra methods composed into L<SQL::DB>, this role also
adds nextval() and currval() functions to the SQL understood by SQLite.
This means you can use them in trigger statements.

=item A common API

If you deploy your application to SQLite and PostgreSQL you can use the
same sequence API across both, avoiding if/else branching in your code.

=back

All methods raise an exception on error.

=head1 METHODS

=over 4

=item create_sequence( $name )

Create a sequence in the database with name $name. An "INTEGER PRIMARY
KEY AUTOINCREMENT" column in SQLite will automatically create a
sequence named after the containing table. Likewise PostgreSQL
automatically creates sequences named 'table_column_seq' for SERIAL
column types.

=item nextval( $name ) -> Int

Advance the sequence to its next value and return that value.

=item currval( $name ) -> Int

Return the current value of the sequence.

=begin comment

If $count is specified then a array of $count values are returned and
the sequence incremented appropriately.


=item setval( $name, $value )

Unimplemented.

=item drop_sequence( $name )

Unimplemented.

=end comment

=back

=head1 SEE ALSO

L<SQL::DB>, L<Moo::Role>

=head1 AUTHOR

Mark Lawrence E<lt>nomad@null.netE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2011 Mark Lawrence <nomad@null.net>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 3 of the License, or (at your
option) any later version.

